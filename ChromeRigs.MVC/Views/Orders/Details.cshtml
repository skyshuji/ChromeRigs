@using ChromeRigs.MVC.Models.Orders
@using ChromeRigs.Utils.Enums
@model OrderDetailsViewModel

@{
    ViewData["Title"] = "Order Details";
}

<div class="container">
    <h1>
        Order Details
        <span class="text-chromerigs-color">#@Model.Id</span>
    </h1>

    <hr />

    <div>
        <dl class="row">
            <dt class="col-sm-2">

                @Html.DisplayNameFor(model => model.OrderTime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OrderTime)
            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Notes)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Notes)
            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.PaymentMethod)
            </dt>
            <dd class="col-sm-10">
                
                @switch (Model.PaymentMethod)
                {
                    case PaymentMethod.Cash:
                        <i class="fa-solid fa-wallet text-success fs-4" title="Cash"></i>
                        break;

                    case PaymentMethod.CreditCard:
                        <i class="fa-brands fa-cc-visa text-chromerigs-color fs-4" title="Credit Card"></i>
                        break;

                    case PaymentMethod.PayPal:
                        <i class="fa-brands fa-paypal color-paypal fs-4" title="PayPal"></i>
                        break;

                    case PaymentMethod.Crypto:
                        <i class="fa-brands fa-bitcoin color-crypto fs-4" title="Crypto"></i>
                        break;
                }

            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TotalPrice)
            </dt>
            <dd class="col-sm-10">
                <span>$</span>@Html.DisplayFor(model => model.TotalPrice)
            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.IsPaid)
            </dt>
            <dd class="col-sm-10">
                
                @if (Model.IsPaid)
                {
                    <i class="fa-solid fa-circle-check text-success fs-4" title="Paid"></i>
                }
                else
                {
                    <i class="fa-solid fa-circle-xmark text-danger fs-4" title="Not Paid"></i>
                }

            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CustomerFullName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CustomerFullName)
            </dd>



            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CustomerAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CustomerAddress)
            </dd>



        </dl>
    </div>

    <hr />

    <h4>Ordered PCs</h4>

    <div class="row">

        @foreach (var pc in Model.PCs)
        {
        <div class="col-lg-4 col-md-6">
            <div class="pc">
                <div class="card">
                    <img src="~/imgs/pcs/@pc.ImageName" class="card-img-top" alt="@pc.Name">
                    <div class="card-body">
                        <h5 class="card-title chromerigs-title">
                            <a class="text-decoration-none chromerigs-title" asp-controller="PCs" asp-action="Details" asp-route-id="@pc.Id" title="Details">
                                @pc.Name
                            </a>
                        </h5>
                        <p class="card-text">@pc.Description</p>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>

    <div mt-4>
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-chromerigs-color">Edit</a>
        <a asp-action="Index" class="btn btn-secondary ms-2">Back to List</a>
    </div>
</div>
